=LAMBDA(array, tolerance, centralityCheck, LET
  ( tolerance_,  IF(ISOMITTED(tolerance), 0.0000001, tolerance)
  , cCheck_,     IF(ISOMITTED(centralityCheck), 0.0000001, centralityCheck)
  , worstAvg,    MAX(BYCOL(array, LAMBDA(col, AVERAGE(col))))
  , IF(AND(TYPE(cCheck_) = 1, cCheck_ >= 0, worstAvg >= cCheck_), "The input to PCA must be centralized. That is, the mean of each column must be close to zero", LET
    ( nCols,      COLUMNS(array)
    , covMatrix,  MAKEARRAY(nCols, nCols, LAMBDA(iRow, iCol, COVARIANCE.P(INDEX(array, 0, iRow), INDEX(array, 0, iCol))))
    , system,     VSTACK(covMatrix, MUNIT(COLUMNS(covMatrix)))
    , fullResult, PCA_INTERNAL(system, tolerance_)
    , varVector,  INDEX(fullResult, SEQUENCE(nCols), SEQUENCE(nCols))
    , idx,        SORTBY(SEQUENCE(nCols), varVector, -1)
    , uncoeffs,   INDEX(fullResult, SEQUENCE(nCols, 1, nCols + 1), SEQUENCE(1, nCols))
    , MAKEARRAY(nCols, nCols, LAMBDA(iRow, iCol, INDEX(uncoeffs, INDEX(idx, iRow, 1), iCol)))
  ))
))